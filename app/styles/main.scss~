$icon-font-path: "/bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap/";

@import 'bootstrap-sass-official/vendor/assets/stylesheets/bootstrap';

// bower:scss
@import "../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap.scss";
// endbower

/* Space out content a bit */
body {
    padding-top: 20px;
    padding-bottom: 20px;
}
$width: 300px;
$tile-count: 3;
$tile-padding: 15px;
$tile-size: ($width - $tile-padding * ($tile-count + 1)) / $tile-count;

#game {
  position: relative;
  width: $width;
  height: $width; // The gameboard is a square

  .grid-container {
    position: absolute;   // the grid is absolutely positioned
    z-index: 1;           // IMPORTANT to set the z-index for layering
    margin: 0 auto;       // center
    .grid-cell {
      width: $tile-size;              // set the cell width
      height: $tile-size;             // set the cell height
      margin-bottom: $tile-padding;   // the padding between lower cells
      margin-right: $tile-padding;    // the padding between the right cell
        // ...
    }
  }
  .tile-container {
    position: absolute;
    z-index: 2;

    .tile {
      width: $tile-size;        // tile width
      height: $tile-size;       // tile height
	@for $x from 1 through $tile-count {
	  @for $y from 1 through $tile-count {
	    $zeroOffsetX: $x - 1;
	    $zeroOffsetY: $y - 1;
	    $newX: ($tile-size) * ($zeroOffsetX) + ($tile-padding * $zeroOffsetX);
	    $newY: ($tile-size) * ($zeroOffsetY) + ($tile-padding * $zeroOffsetY);

	    &.position-#{$zeroOffsetX}-#{$zeroOffsetY} { 
	      @include transform(translate($newX, $newY));
	    }
	  }
	}
        // ...
    }
  }
}










